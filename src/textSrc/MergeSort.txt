
1.public static void mergeSort(int[] a, int n) {
2.    if (n < 2) 
3.        return;
4.    int mid = n / 2;
5.    int[] l = new int[mid];
6.    int[] r = new int[n - mid];
7.    for (int i = 0; i < mid; i++) 
8.        l[i] = a[i];
9.    for (int i = mid; i < n; i++) 
10.        r[i - mid] = a[i];
11.    mergeSort(l, mid);
12.    mergeSort(r, n - mid);
13.    merge(a, l, r, mid, n - mid);
14.}
15.public static void merge(int[] a, int[] l, int[] r, int left, int right) {
17.    int i = 0, j = 0, k = 0;
18.    while (i < left && j < right) {
19.        if (l[i] <= r[j]) 
20.            a[k++] = l[i++];
21.        else 
22.            a[k++] = r[j++];
23.    }
24.    while (i < left) 
25.        a[k++] = l[i++];
26.    while (j < right) 
27.        a[k++] = r[j++];
28.}